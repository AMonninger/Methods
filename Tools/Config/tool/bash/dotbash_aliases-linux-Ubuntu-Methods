# ; -*- mode: sh ;-*- ;;; Forces editing in sh-mode 
# Executed for non-login shells (including emacs); sourced by ~/.bashrc
# Available for customization by each user
# ~/.bashrc (and anything called by it) must not output anything if the shell is noninteractive


if [[ $- == *i* ]]; then # this is an interactive shell
    PS1='\u@\h:\W[\!] \$ '
    if [ -e /tmp/test-for-llorracc ]; then # This is the first time an interactive script has been run after bootup (test-for-llorracc should have been created by login script)
	echo 'First run of interactive shell; testing for GitHub/Methods directory'
	sudo rm -f /tmp/test-for-llorracc  # Prevent this test from running every time a new interactive script is run after first run
        # The stuff below will be run when the first interactive shell is launched for a pristine course machine
        # ~/.bash_bootstrap contains whatever is necessary to complete the conversion of the machine from one state to another
        if [ -f ~/.bash_bootstrap ]; then
	    echo 'Running bootstrap code to create links ...'
	    source ~/.bash_bootstrap
	    rm     ~/.bash_bootstrap
	else # Not bootstrapping, so link to local if it exists:
	    if [ -e ~/GitHub/Methods ]; then
		sudo chmod a+x ~/GitHub/Methods/Tools/Scripts/GitHub-Methods-Update.sh
		~/GitHub/Methods/Tools/Scripts/GitHub-Methods-Update.sh
	    else
		echo '~/GitHub/Methods folder does not exist'
		if [ -e /media/ro.llorracc.local ] && [ -e /media/rw.llorracc.local ] && [ "$(ls -A /media/ro.llorracc.local)" ] && [ "$(ls -A /media/rw.llorracc.local)" ]; then # local is mounted but not linked
		    echo 'Linking to existing local Methods folder'
		    /media/ro.llorracc.local/Volumes/Sync/Dropbox/OthersTo/JHU/Courses/pri/Methods/Tools/Install/Machines/010_Xubuntu/Scripts/010_Basic_Make-Root-Links.sh # makes links but does not switch /Methods
        	    sudo rm -f  /Methods
		    sudo ln -fs /Methods-Slve /Methods
		fi # end of test of whether /media/xx.llorracc.local exists
	    fi # End of test whether ~/GitHub/Methods/ exists
	    # Now offer option to connect to local alternative if it is available 
	    if [ -e /media/ro.llorracc.local ] && [ -e /media/rw.llorracc.local ]; then # this machine has been marked as one on which local mounting might be an option
		if [ "`ping -c 1 llorracc.local &> /dev/null ; echo $?`" == "0" ]; then # Running from a location where llorracc.local is visible, print option to link to it
		    if [ ! "$(ls -A /media/ro.llorracc.local)" ] || [ ! "$(ls -A /media/rw.llorracc.local)" ]; then # something is not mounted, but could be
			mountOnly='source ~/.bashrc-linux-local-mount-force' && mountAndSwitch=$mountOnly && mountAndSwitch+=' ; sudo rm -r /Methods ; sudo ln -fs /Methods-Mstr /Methods' && echo ''
			echo 'llorracc.local is available. Command to mount it is on clipboard (ctrl-shft-v to paste):' && echo '' && echo 'Mount only:' $mountOnly && echo 'Switch too:' $mountAndSwitch && echo '' && echo -n $mountAndSwitch | xsel --clipboard --input
		    fi
		else # Inability to ping llorracc-local despite presence of /media mounts 
		    if [ `whoami` == "methods" ]; then
			if [ ! -e /home/methods/GitHub/Methods ]; then
			    echo 'Need to install Methods courseware.'
			    cmd="cd ; mkdir -p GitHub ; cd GitHub ; git clone https://github.com/ccarrollATjhuecon/Methods.git"
			    echo "$cmd" | xsel --clipboard --input
			    echo 'Hit return to execute the command below:'
			    echo "$cmd" 
			    read answer
			    eval "$cmd"
			fi
		    else
			echo 'No Methods directory, but OK because not methods user.'
		    fi # methods user or not 
		    #		    fi # local directories are mounted or not 
		fi # ping succeeds or not 
	    fi # receptacles for mounting exist
	fi # bootstrap file exists or not
    fi # /tmp/test-for-lorracc exists or not 
fi # interactive shell or not 

# ~/.bash_aliases could run twice because it's sourced twice in ~/.bashrc
# First time is a modification of the default ~/.bashrc file to cause noninteractive shells to run ~/.bash_aliases
# This should be the only modification to the default ~/.bashrc file
# Second (possible) time is late in default ~/.bashrc file
# Left in place to minimize changes in ~/.bashrc from Ubuntu distro default

# Change the prompt (in an interactive shell)
# Default prompt from Xubuntu ~/.bashrc contains entire path, which is much too long
# The prompt below replaces this with just the basename of $0 (obtained by \W)
# and puts the command number from history in [brackets]

if [ ! -z "$BASH_ALIASES_HAS_RUN" ]; then # Don't keep adding to the path
    return
else
    BASH_ALIASES_HAS_RUN=true
fi

# Add ~/bin to the front of the path to let bash find any user-specific commands
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

# If Anaconda has been installed in the user's directory, tell bash it's there
if [ -d "~/anaconda3/bin" ]; then
    export PATH="$HOME/anadonda3/bin"
fi

alias DeltaWalker=/usr/local/share/applications/DeltaWalker

# if [[ $- == *i* ]]; then # this is an interactive shell
#     #    PS1='${debian_chroot:+($debian_chroot)}\h/\W[\!]:\$ ' # Under occasional circumstances debian_chroot gets defined and makes massively long prompt, so next line eliminates it
#     PS1='\h:\W[\!] \$ '
#     if [ -e /tmp/test-for-llorracc ]; then # This is the first time an interactive script has been run after bootup
# 	sudo rm -f /tmp/test-for-llorracc  # Prevent this test from running every time a new interactive script is run after first run
# 	if [ "`ping -c 1 llorracc.local &> /dev/null ; echo $?`" == "0" ]; then # Running from a location where llorracc.local is visible, print option to link to it
# 	    if [ ! -e /media/ro.llorracc.local ] || [ ! -e /media/rw.llorracc.local ] || [ ! "$(ls -A /media/ro.llorracc.local)" ] || [ ! "$(ls -A /media/rw.llorracc.local)" ]; then # something is not mounted, but could be
# 		mountOnly='source ~/.bashrc-linux-local-mount-force' && mountAndSwitch=$mountOnly && mountAndSwitch+=' ; sudo rm -r /Methods ; sudo ln -fs /Methods-Mstr /Methods' && echo ''
# 		echo 'llorracc.local is available. Command to mount it is on clipboard (ctrl-shft-v to paste):' && echo '' && echo 'Mount only:' $mountOnly && echo 'Switch too:' $mountAndSwitch && echo '' && echo -n $mountAndSwitch | xsel --clipboard --input
# 	    fi
# 	fi
#     fi
# fi

# If not running interactively, don't do any of the stuff following the end of the case command
# (which is the default Ubuntu method of testing shell interactivity)
case $- in
    *i*) ;;
    *) return;;
esac

